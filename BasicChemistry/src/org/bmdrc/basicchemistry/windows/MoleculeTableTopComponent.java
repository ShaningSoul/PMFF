/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bmdrc.basicchemistry.windows;

import java.io.File;
import java.io.Serializable;
import java.util.List;
import java.util.Properties;
import org.bmdrc.basicchemistry.table.MoleculeTable;
import org.bmdrc.ui.util.TwoDimensionList;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openscience.cdk.interfaces.IAtomContainerSet;
import org.bmdrc.basicchemistry.reader.SDFReader;
import org.bmdrc.ui.abstracts.WindowAdapter;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.bmdrc.basicchemistry.windows//MoleculeTable//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "MoleculeTableTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "org.bmdrc.basicchemistry.windows.MoleculeTableTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_MoleculeTableAction",
        preferredID = "MoleculeTableTopComponent"
)
@Messages({
    "CTL_MoleculeTableAction=Molecule Table",
    "CTL_MoleculeTableTopComponent=MoleculeTable Window",
    "CTL_MoleculeTableTopComponentClassName=MoleculeTableTopComponent"
})
public final class MoleculeTableTopComponent extends TopComponent implements Serializable {

    private static final long serialVersionUID = -2706910901041527278L;

    private MoleculeStructureViewerTopComponent itsViewerTopComponent;
    private MoleculeTable itsTable;
    private File itsMoleculeFile;
    //constant String variable
    private final String MOLECULE_FILE_KEY = "Molecule File Path";
    private final String WINDOW_NAME_KEY = "Name";

    public MoleculeTableTopComponent() {
        this(Bundle.CTL_MoleculeTableTopComponent());
    }

    public MoleculeTableTopComponent(String theName) {
        this(null, theName);
    }

    public MoleculeTableTopComponent(File theMoleculeFile) {
        this(theMoleculeFile, theMoleculeFile.getName());
    }

    public MoleculeTableTopComponent(File theMoleculeFile, String theName) {
        initComponents();
        this.setName(theName);

        this.itsMoleculeFile = theMoleculeFile;
        
        this.__initialize();
    }

    private void __initialize() {
        this.itsTable = new MoleculeTable(this.itsMoleculeFile, this);

        this.itsTotalScrollPane.setViewportView(this.itsTable);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itsTotalScrollPane = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(itsTotalScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane itsTotalScrollPane;
    // End of variables declaration//GEN-END:variables
    public MoleculeTable getTable() {
        return this.itsTable;
    }

    public File getMoleculeFile() {
        return itsMoleculeFile;
    }

    public void setMoleculeFile(File theMoleculeFile) {
        this.itsMoleculeFile = theMoleculeFile;
        this.itsTable.setMoleculeFile(theMoleculeFile);
    }

    public MoleculeStructureViewerTopComponent getViewerTopComponent() {
        return itsViewerTopComponent;
    }

    public void setViewerTopComponent(MoleculeStructureViewerTopComponent theViewerTopComponent) {
        this.itsViewerTopComponent = theViewerTopComponent;
    }

    public TwoDimensionList<String> getData() {
        return this.itsTable.getData();
    }
    
    public void addRow(List theDataList) {
        this.itsTable.addRow(theDataList);
    }

    public void setData(String... theColumnHeaders) {
        this.itsTable.setData(theColumnHeaders);
    }

    public void setData(TwoDimensionList theData2dList) {
        this.itsTable.setData(theData2dList);
    }

    public void setData(TwoDimensionList theData2dList, List<String> theColumnHeaderList) {
        this.itsTable.setData(theData2dList, theColumnHeaderList);
    }

    public IAtomContainerSet getMoleculeSet() {
        return this.itsTable.getMoleculeSet();
    }

    public void setMoleculeSet(IAtomContainerSet theMoleculeSet) {
        this.itsTable.setMoleculeSet(theMoleculeSet);
    }

    @Override
    protected void componentClosed() {
        if (this.itsViewerTopComponent.isOpened()) {
            this.itsViewerTopComponent.close();
        }
    }

    @Override
    protected void componentActivated() {
        if (!this.itsViewerTopComponent.isShowing()) {
            this.itsViewerTopComponent.requestActive();
        }
    }

    void writeProperties(java.util.Properties theProperties) {
        theProperties.setProperty(this.MOLECULE_FILE_KEY, this.itsMoleculeFile.getPath());
        theProperties.setProperty(this.WINDOW_NAME_KEY, this.getName());
    }

    void readProperties(Properties theProperty) {
        String theInputFilePath = theProperty.getProperty(this.MOLECULE_FILE_KEY, null);

        if (theInputFilePath != null) {
            this.setMoleculeFile(new File(theInputFilePath));
            this.setMoleculeSet(SDFReader.openMoleculeFile(this.itsMoleculeFile));

            this.setName(theProperty.getProperty(this.WINDOW_NAME_KEY, Bundle.CTL_MoleculeTableTopComponent()));

            MoleculeStructureViewerTopComponent theViewerTopComponent = new MoleculeStructureViewerTopComponent(new File(theInputFilePath), this.getName());

            WindowAdapter.getEditorMode().dockInto(theViewerTopComponent);

            theViewerTopComponent.open();
            theViewerTopComponent.requestActive();
        } else {
            this.close();
        }
    }

    private IAtomContainerSet __readMoleculeSet(Properties theProperty) {
        String theFilePath = theProperty.getProperty(this.MOLECULE_FILE_KEY, null);

        if (theFilePath != null) {
            return SDFReader.openMoleculeFile(new File(theFilePath));
        }

        return null;
    }
}
